import logging
from api import MonsterTrainAPI

# Set up logging
logging.basicConfig(level=logging.DEBUG)


"""
Note about the authentification:

You need to own the game and an authorisation token is mandatory to authenticate and calls the game's servers/leaderboards endpoints.
Not an expert but this token is built from your Steam Id + a session auth ticket (that changes every time) generated by Steam/Monster Train.
The process is then done through the /auth endpoint (not documented here)
As I wasn't able to get this session ticket by other means (steam api etc.), I'm using an already-generated authentification token.

The auth token seems to be of single use, or at least time limited (24h ? single session ?)
You should be able to retrieve it using an HTTP(s) network traffic analyzer tool when accessing the daily challenge leaderboard in-game.
I'm not documenting this part as this project is a one-shot exercise so I can crunch some players' data. The Monster Train leaderboard API is neither official nor documented.
Just so you know, you can't reuse an existing token and will need to generate a new (by launching the game / access the leaderboards) every time you use the client.
"""


# Example usage of the Monster Train API
def main():
    auth_token = "your_auth_token_here"
    challenge_id = "example_challenge_id"
    user_id = "example_user_id"

    api = MonsterTrainAPI(auth_token=auth_token)

    # Get challenge details
    challenge = api.get_challenge(challenge_id)
    print("Challenge Details:")
    print(challenge)

    # Get leaderboard
    leaderboard = api.get_leaderboard(challenge_id, offset=1, limit=5)
    print("\nLeaderboard:")
    print(leaderboard)

    # Get gameruns
    gameruns = api.get_gameruns(user_id, challenge_id)
    print("\nGame Runs:")
    print(gameruns)


if __name__ == "__main__":
    main()
